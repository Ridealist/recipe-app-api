version: '3.9'

services:
  app:
    build:
      # want to build "app" in current diretory 
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
  
  proxy:
    build:
      # want to build "proxy image" in ./proxy diretory
      context: ./proxy
    restart: always
    depends_on:
      - app
    # 80 포트를 local machine에서 running host 8000 포트로 연결 
    ports:
      # local에서 실행해볼때 8000으로.
      # deploy에서는 80포트로.
      - 8000:8000
    volumes:
      - static-data:/vol/static
  
volumes:
  # db는 별도 volume
  postgres-data:
  # app / proxy 서비스는 동일한 volume(media & static files)
  static-data:
